# version format
version: 1.0.{build}
pull_requests:
  do_not_increment_build_number: true

# branches to build
branches:
  # allow list
  only:
    - main

# Start builds on tags only (GitHub, BitBucket, GitLab, Gitea)
skip_non_tags: false

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

environment:
  INNO_SETUP: 'C:\\Program Files (x86)\\Inno Setup 6'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

# scripts that run after cloning repository
install:
  - cmd: git submodule update --init --recursive

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                  # enable MSBuild parallel builds
  project: Toolkit.Desktop.sln
  # MSBuild verbosity level
  verbosity: minimal

# scripts to run before build
before_build:
  - cmd: nuget restore Toolkit.Desktop.sln

# to run your custom scripts instead of automatic MSBuild
build_script:
  # - cmd: echo Build projects
  # - cmd: msbuild Toolkit.Desktop.sln /m /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  # - cmd: echo Build .NET Core projects
  # - cmd: dotnet build ./config/Config.csproj --configuration Release --framework net5.0-windows --output ./x64/Release
  # - cmd: dotnet build ./src/SimpleDICOMToolkit.csproj --configuration Release --framework net5.0-windows --output ./x64/Release

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:
  - cmd: set PATH=%PATH%;%INNO_SETUP%
  - cmd: iscc build\toolkit.iss

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

after_test:

# to disable automatic builds
#build: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: Desktop\x64\Release
    name: dicom-toolkit_x64

  - path: build\dicom-toolkit.exe
    name: installer

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
    # Deploy to GitHub Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: $(APPVEYOR_PROJECT_NAME)-v$(APPVEYOR_REPO_TAG_NAME)
    artifact: dicom-toolkit_x64, installer
    draft: true
    force_update: true
    prerelease: false
    auth_token:
      secure: 4qN3mCEpfjHrRyMg/tn/79WC9r47oq4te/w066k5WEW2IT+10aiHaEdxqtyhca4a
    on:
      branch: main                  # release from main branch only
      APPVEYOR_REPO_TAG: true       # deploy on tag push only

#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications:

#   # Email
#   - provider: Email
#     to:
#       - 847320916@qq.com
#     subject: 'Build {{status}}'                  # optional
#     message: "{{message}}, {{commitId}}, ..."    # optional
#     on_build_status_changed: true
