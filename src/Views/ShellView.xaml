<Window x:Class="SimpleDICOMToolkit.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:taskbar="http://www.hardcodet.net/taskbar"
        xmlns:c="clr-namespace:SimpleDICOMToolkit.Controls"
        mc:Ignorable="d"
        Title="{Binding DisplayName}"
        ResizeMode="CanResizeWithGrip"
        MinWidth="640"
        MinHeight="400"
        Width="640"
        Height="480"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        Closed="Window_Closed"
        Activated="Window_Activated"
        Deactivated="Window_Deactivated">

    <Window.Resources>
        <SolidColorBrush x:Key="CommonBackground" Color="White" />
        <SolidColorBrush x:Key="HeaderBackground" Color="White" />
        <SolidColorBrush x:Key="HeaderForeground" Color="Black" />
        <SolidColorBrush x:Key="ButtonBackground" Color="White" />
        <SolidColorBrush x:Key="ButtonForeground" Color="Black" />
        <SolidColorBrush x:Key="TabItemBackground" Color="White" />
        <SolidColorBrush x:Key="TabItemForeground" Color="Black" />
        <SolidColorBrush x:Key="SelectedTabItemBackground" Color="White" />
        <SolidColorBrush x:Key="SelectedTabItemForeground" Color="Black" />
        <SolidColorBrush x:Key="IndicatorColor" Color="White" />

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        </Style>
        
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{DynamicResource TabItemBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource TabItemForeground}" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="BorderThickness" Value="0,0,1,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="ContainerBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid>
                                <Rectangle x:Name="ContentBackground" Fill="White" Margin="-2" Opacity="0" />
                                <Rectangle x:Name="MouseIndicator" Fill="Transparent" Margin="-2" VerticalAlignment="Bottom" Height="2" />
                                <ContentPresenter 
                                    x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    ContentSource="Header"
                                    Focusable="False"
                                    RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MouseIndicator" Property="Fill" Value="{DynamicResource IndicatorColor}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter Property="Foreground" Value="{DynamicResource SelectedTabItemForeground}" />
                                <Setter Property="Background" Value="{DynamicResource SelectedTabItemBackground}" />
                                <Setter TargetName="MouseIndicator" Property="Fill" Value="{DynamicResource IndicatorColor}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentBackground" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="0.12" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentBackground" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.12" To="0" Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ConductorTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="ItemsSource" Value="{Binding Items}"/>
            <Setter Property="SelectedItem" Value="{Binding ActiveItem}"/>
            <Setter Property="DisplayMemberPath" Value="DisplayName"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl s:View.Model="{Binding}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="TrayIconContextMenu" Placement="MousePoint">
            <MenuItem Click="MenuItemShowClick">
                <MenuItem.Header>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuShowMainWindow']" />
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuShowMainWindow']" />
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="pack://application:,,,/Assets/window.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuLanguageSetting']" />
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuLanguageSetting']" />
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="pack://application:,,,/Assets/earth.png" />
                </MenuItem.Icon>
                <MenuItem Header="English" ToolTip="English" Tag="en-US" IsCheckable="True" Click="LanguageClick" IsChecked="True"/>
                <MenuItem Header="简体中文" ToolTip="简体中文" Tag="zh-CN" IsCheckable="True" Click="LanguageClick" />
            </MenuItem>
            <MenuItem Click="MenuItemCheckUpdateClick">
                <MenuItem.Header>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='CheckUpdate']" />
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='CheckUpdate']" />
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="pack://application:,,,/Assets/update.png" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Click="MenuItemExitClick">
                <MenuItem.Header>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuExit']" />
                </MenuItem.Header>
                <MenuItem.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MenuExit']" />
                </MenuItem.ToolTip>
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="pack://application:,,,/Assets/exit.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding TaskbarService.ProgressState}"
                         ProgressValue="{Binding TaskbarService.ProgressValue}"
                         Description="{Binding DisplayName}" />
    </Window.TaskbarItemInfo>

    <Grid x:Name="ContentGrid" Background="{DynamicResource CommonBackground}">
        <TabControl Style="{StaticResource ConductorTabControl}" />
        <c:Toaster x:Name="MainToaster" Panel.ZIndex="100" Margin="0,0,0,18" />
        <taskbar:TaskbarIcon x:Name="TrayIcon"
                             IconSource="/Assets/icon.ico"
                             ToolTipText="{Binding DisplayName}"
                             ContextMenu="{StaticResource TrayIconContextMenu}"
                             MenuActivation="RightClick"
                             TrayMouseDoubleClick="MenuItemShowClick" />
    </Grid>
</Window>
